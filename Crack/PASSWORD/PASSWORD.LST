Turbo Assembler	 Version 4.1	    04/21/20 24:07:17	    Page 1
password.asm



      1	0000			     .model tiny
      2
      3	0000			     .data
      4	0000  41 63 63 65 73 73	20+  fail_msg: db 'Access denied', 13, 10, '$'
      5	      64 65 6E 69 65 64	0D+
      6	      0A 24
      7	0010  41 63 63 65 73 73	20+  success_msg: db 'Access allowed', 13, 10, '$'
      8	      61 6C 6C 6F 77 65	64+
      9	      0D 0A 24
     10	0021  6C 65 74 20 6D 65	20+  real_password: db 'let me iiiiin',	13, 10,	'$'
     11	      69 69 69 69 69 6E	0D+
     12	      0A 24
     13	0031  30 30 30 30 30 30	30+  buf: db '0000000000000000000000000000000000000000000000000000000000000000'
     14	      30 30 30 30 30 30	30+
     15	      30 30 30 30 30 30	30+
     16	      30 30 30 30 30 30	30+
     17	      30 30 30 30 30 30	30+
     18	      30 30 30 30 30 30	30+
     19	      30 30 30 30 30 30	30+
     20	      30 30 30 30 30 30	30+
     21	      30 30 30 30 30 30	30+
     22	      30
     23	0071  30 30 30 30 30 30	30+  input: db '0000000000000000000'
     24	      30 30 30 30 30 30	30+
     25	      30 30 30 30 30
     26	0084  70 61 73 73 77 6F	72+  not_a_password: db	'password', 13,	10, '$'
     27	      64 0D 0A 24
     28	008F  6E 6F 74 20 61 20	70+  password: db 'not a password', 13,	10, '$'
     29	      61 73 73 77 6F 72	64+
     30	      0D 0A 24
     31	00A0  71 77 65 72 74 79	0D+  do_not_look: db 'qwerty', 13, 10, '$'
     32	      0A 24
     33	00A9  31 32 33 34 35 36	71+  go_away: db '123456qwerty', 13, 10, '$'
     34	      77 65 72 74 79 0D	0A+
     35	      24
     36
     37
     38	00B8			     .code
     39				     org 100h
     40				     Locals @@
     41
     42	0100			     Start:
     43	0100  33 D2				     xor dx, dx
     44	0102  52				     push dx
     45
     46	0103  B9 0014				     mov cx, 20d
     47	0106  BF 0071r				     mov di, offset input
     48	0109  E8 007A				     call gets
     49
     50	010C  B9 0004				     mov cx, 4d
     51	010F  8C CF				     mov di, cs
     52	0111  E8 005E				     call getHash
     53
     54
     55	0114  BF 0031r				     mov di, offset buf
     56	0117  AB				     stosw
     57	0118  B0 24				     mov al, '$'
Turbo Assembler	 Version 4.1	    04/21/20 24:07:17	    Page 2
password.asm



     58	011A  AA				     stosb
     59
     60	011B			     troll2:
     61	011B  5A				     pop dx
     62	011C  83 FA 00				     cmp dx, 0
     63	011F  75 FA				     jne troll2
     64	0121  EB 01 90				     jmp troll
     65	0124			     troll:
     66
     67
     68	0124  8C C8				     mov ax, cs
     69	0126  8E D8				     mov ds, ax
     70	0128  B4 09				     mov ah, 9h
     71	012A  BA 0031r				     mov dx, offset buf
     72	012D  CD 21				     int 21h
     73
     74	012F  BA 0071r				     mov dx, offset input
     75	0132  CD 21				     int 21h
     76
     77	0134  BE 0031r				     mov si, offset buf
     78	0137  BF 0071r				     mov di, offset input
     79	013A  E8 001B				     call strcmp
     80
     81	013D  8C C8				     mov ax, cs
     82	013F  8E D8				     mov ds, ax
     83
     84	0141  B4 09				     mov ah, 9h
     85	0143  80 FE 00				     cmp dh, 0h
     86	0146  74 08				     je	success
     87
     88	0148			     fault:
     89	0148  BA 0000r				     mov dx, offset fail_msg
     90	014B  CD 21				     int 21h
     91	014D  EB 5A 90				     jmp EndProg
     92	0150			     success:
     93	0150  BA 0010r				     mov dx, offset success_msg
     94	0153  CD 21				     int 21h
     95	0155  EB 52 90				     jmp EndProg
     96
     97				     ;===========================================================
     98				     ; compares	2 strings
     99				     ; ENTRY:ES:[DI] --	first address
    100				     ;	     ES:[SI] --	second address
    101				     ; EXIT: DH	= 0 of equals and 1 if not
    102				     ;===========================================================
    103	0158			     strcmp	     proc
    104	0158  32 F6				     xor dh, dh
    105	015A  FE C6				     inc dh
    106	015C			     @@loop:
    107	015C  26: 8A 04				     mov al, byte ptr es:[si]
    108	015F  26: 8A 25				     mov ah, byte ptr es:[di]
    109	0162  3A E0				     cmp ah, al
    110	0164  75 0B				     jne @@end
    111
    112	0166  80 FC 24				     cmp ah, '$'
    113	0169  74 04				     je	@@positive_end
    114	016B  47				     inc di
Turbo Assembler	 Version 4.1	    04/21/20 24:07:17	    Page 3
password.asm



    115	016C  46				     inc si
    116	016D  EB ED				     jmp @@loop
    117	016F			     @@positive_end:
    118	016F  FE CE				     dec dh
    119	0171			     @@end:
    120	0171  C3				     ret
    121	0172					     endp
    122				     ;===========================================================
    123				     ; counts hash from	es:[dx]	address
    124				     ; ENTRY:DI	-- address to count from
    125				     ;	     CX	-- qty of symbols to count
    126				     ; EXIT: AX	-- hash
    127				     ;===========================================================
    128	0172			     getHash	     proc
    129	0172  BA 0021r				     mov dx, offset real_password
    130	0175  8B F2				     mov si, dx
    131	0177  33 C0				     xor ax, ax
    132	0179			     @@next:
    133
    134	0179  26: 8A 3D				     mov bh, byte ptr es:[di]
    135	017C  42				     inc dx
    136
    137	017D  03 C3				     add ax, bx
    138
    139	017F  26: 03 04				     add ax, word ptr es:[si]
    140	0182  46				     inc si
    141	0183  E2 F4				     loop @@next
    142
    143	0185  C3				     ret
    144	0186					     endp
    145				     ;===========================================================
    146				     ; puts a string from buffer to es:di until	the end	symbol
    147				     ; ENTRY:ES:DI - buffer address,
    148				     ;	     CX	-- max length
    149				     ;	     AH	-- buffer size
    150				     ;===========================================================
    151	0186			     gets	     proc
    152	0186  32 E4				     xor ah, ah
    153	0188  FE C4				     inc ah
    154	018A  D0 E4 D0 E4 D0 E4			     shl ah, 3
    155
    156	0190			     @@get_symbol:
    157	0190  CD 21				     int 21h
    158
    159	0192  3C 0D				     cmp al, 0Dh
    160	0194  74 0F				     je	@@end_gets
    161
    162	0196  3C 0A				     cmp al, 0Ah
    163	0198  74 0B				     je	@@end_gets
    164
    165	019A  3C 24				     cmp al, 24h
    166	019C  74 07				     je	@@end_gets
    167
    168	019E  3C 00				     cmp al, 0h
    169	01A0  74 03				     je	@@end_gets
    170
    171	01A2  AA				     stosb
Turbo Assembler	 Version 4.1	    04/21/20 24:07:17	    Page 4
password.asm



    172	01A3  E2 EB				     loop @@get_symbol
    173	01A5			     @@end_gets:
    174	01A5  B0 24				     mov al, '$'
    175	01A7  AA				     stosb
    176	01A8  C3				     ret
    177	01A9					     endp
    178	01A9			     EndProg:
    179	01A9  B8 4C00				     mov ax, 4c00h
    180	01AC  CD 21				     int 21h
    181				     end Start
Turbo Assembler	 Version 4.1	    04/21/20 24:07:17	    Page 5
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "04/21/20"
??FILENAME			  Text	 "password"
??TIME				  Text	 "24:07:17"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@END				  Near	 DGROUP:0171
@@END_GETS			  Near	 DGROUP:01A5
@@GET_SYMBOL			  Near	 DGROUP:0190
@@LOOP				  Near	 DGROUP:015C
@@NEXT				  Near	 DGROUP:0179
@@POSITIVE_END			  Near	 DGROUP:016F
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 PASSWORD
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
BUF				  Near	 DGROUP:0031
DO_NOT_LOOK			  Near	 DGROUP:00A0
ENDPROG				  Near	 DGROUP:01A9
FAIL_MSG			  Near	 DGROUP:0000
FAULT				  Near	 DGROUP:0148
GETHASH				  Near	 DGROUP:0172
GETS				  Near	 DGROUP:0186
GO_AWAY				  Near	 DGROUP:00A9
INPUT				  Near	 DGROUP:0071
NOT_A_PASSWORD			  Near	 DGROUP:0084
PASSWORD			  Near	 DGROUP:008F
REAL_PASSWORD			  Near	 DGROUP:0021
START				  Near	 DGROUP:0100
STRCMP				  Near	 DGROUP:0158
SUCCESS				  Near	 DGROUP:0150
SUCCESS_MSG			  Near	 DGROUP:0010
TROLL				  Near	 DGROUP:0124
TROLL2				  Near	 DGROUP:011B

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  00B8 Word	  Public  DATA
  _TEXT				  16  01AE Word	  Public  CODE
